@model List<CartUpdateRequest>
@{
    string id = User.Identity.IsAuthenticated ? User.Claims.Where(x => x.Type == "Id").FirstOrDefault().Value.ToString() : "0";
}
<div class="container margin-top">
    <h3 class="detail-title">Cart</h3>
    <form method="post" asp-action="CheckOut" asp-controller="Cart" onsubmit="return checkOutCart()">
        <div class="cart-control">
            <div class="cart1">
                @if (User.Identity.IsAuthenticated)
                {
                    for (int i = 0; i < Model.Count(); i++)
                    {
                        <div class="cart1-conatain" id="@("product"+Model[i].IdProduct)">
                            <img src="@(SystemConstants.AppSettings.ImageUrl)/@ViewBag.data[i].FileName" alt="" class="cart1-conatain-img" />
                            <div class="cart-detail">
                                <p class="cart-detail-name">@ViewBag.data[i].ProductName</p>
                                <p class="cart-detail-name">Size: @ViewBag.data[i].Size cm</p>
                                <p class="cart-detail-name cart-detail-name-color">
                                    Price:@(((decimal)ViewBag.data[i].OriginalPrice).ToVND())
                                </p>
                                <label for="@("amount"+i)">Quantity:</label>
                                <input type="number"
                                       name=""
                                       value="@ViewBag.data[i].Amount"
                                       id="@("amount"+i)"
                                       min="1"
                                       max="99"
                                       onchange='onchangetotal(@Model[i].IdProduct, "@id",this.value)' />
                            </div>

                            <div class="cart1-delete" onclick='deleteProduct(@Model[i].IdProduct,"@id")'>
                                <svg version="1.1"
                                     id="Capa_1"
                                     xmlns="http://www.w3.org/2000/svg"
                                     xmlns:xlink="http://www.w3.org/1999/xlink"
                                     x="0px"
                                     y="0px"
                                     width="30px"
                                     height="30px"
                                     viewBox="0 0 92.132 92.132"
                                     style="enable-background: new 0 0 92.132 92.132"
                                     xml:space="preserve">
                                <g>
                                <g>
                                <path fill="#f3455a"
                                      d="M2.141,89.13c1.425,1.429,3.299,2.142,5.167,2.142c1.869,0,3.742-0.713,5.167-2.142l33.591-33.592L79.657,89.13
    c1.426,1.429,3.299,2.142,5.167,2.142c1.867,0,3.74-0.713,5.167-2.142c2.854-2.854,2.854-7.48,0-10.334L56.398,45.205
    l31.869-31.869c2.855-2.853,2.855-7.481,0-10.334c-2.853-2.855-7.479-2.855-10.334,0L46.065,34.87L14.198,3.001
    c-2.854-2.855-7.481-2.855-10.333,0c-2.855,2.853-2.855,7.481,0,10.334l31.868,31.869L2.143,78.795
    C-0.714,81.648-0.714,86.274,2.141,89.13z"></path>
                  </g>
                </g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
                                <g></g>
              </svg>
                            </div>
                        </div>
                    }

                }
                else
                {
                    <p class="cart2-title">Your cart is empty </p>
                    <p class="cart2-title">Please Login to buy </p>
                }
            </div>
            <div class="cart2">
                <p class="cart2-title">Delivery Information</p>
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="cart2-user">
                        <p class="cart2-user-name">User name:</p>
                        <p>@ViewBag.user.Name</p>
                    </div>
                    <div class="cart2-user">
                        <p class="cart2-user-name">Phone:</p>
                        <p>@ViewBag.user.PhoneNumber</p>
                    </div>
                    <p class="cart2-user-name cart2-user-name-margin">Address:</p>
                    <p class="cart2-user-name cart2-user-name-margin">
                        @ViewBag.user.Address
                    </p>
                    <p class="cart2-user-name cart2-user-name-margin">
                        Total:
                        <span id="total">@(((decimal)ViewBag.total).ToVND())</span>
                    </p>
                    <input style="align-self:center;" type="submit" class="btn btn-primary" value="Check Out">
                }
                else
                {
                    <p class="cart2-title">Your aren't logged in </p>
                    <p class="cart2-title">Please Login to buy </p>
                }

            </div>
        </div>
    </form>

</div>
<script>
    function deleteProduct(productID, userID) {
        var contain = document.getElementById(`product${productID}`);
        contain.classList.add("opacity");
        contain.addEventListener("transitionend", (e) => {
            e.target.style.display = "none";
        });
        var url = "/Cart/DeleteCart";
        var input = {};
        input.productid = productID;
        input.userid = userID;
        const xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var obj = JSON.parse(this.responseText);
                if (obj.issucess == true) {
                    refreshCartNumber(obj.amount);
                    var total = document.getElementById("total");
                    total.innerText = new Intl.NumberFormat().format(obj.total) + " đ";
                }
            };
        }
        xhttp.open("POST", url);
        xhttp.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        xhttp.send(JSON.stringify(input));
    }
    function onchangetotal(productID, UserId, amount) {
        console.log(productID, UserId, amount);
        var url = "/Cart/ChangeTotal";
        var input = {}
        input.idproduct = productID;
        input.amount = amount;
        input.userid = UserId;
        const xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var obj = JSON.parse(this.responseText);
                if (obj.issucess) {
                    console.log(obj);
                    var total = document.getElementById("total");
                    total.innerText = new Intl.NumberFormat().format(obj.total) + " đ";
                }

            }
        };
        xhttp.open("POST", url);
        xhttp.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        xhttp.send(JSON.stringify(input));
    }
    function checkOutCart() {
        var total = document.getElementById("total").innerText;
        console.log(total);
        if (total == "0 đ") {
            toast({
                title: "Your cart is empty",
                message: "Please to add product to basket.",
                type: "error",
                duration: 3000,
            });
            return false;
        } else {
            var rs = confirm("Are you sure to buy cake at Greek's Bakery ?");
            if (rs == true) {
                return true;
            } else return false;
        }

    }
</script>